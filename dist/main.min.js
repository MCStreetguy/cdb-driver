"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};function _classCallCheck(t,s){if(!(t instanceof s))throw new TypeError("Cannot call a class as a function")}function _isset(t,s){if(s){e=!0;try{var r=t instanceof s}catch(t){r=!1}try{var i=(void 0===t?"undefined":_typeof(t))===s}catch(t){i=!1}}else var e=!1;return null!=t&&null!=t&&e&&(r||i)}var CDBDriver=function t(s){if(_classCallCheck(this,t),_isset(s,"object")){if(!_isset(s.host,"string")||!_isset(s.port,"number"))throw new TypeError("CDBDriver configuration is missing required keys!");this.host=s.host,this.port=s.port,_isset(s.user,"string")&&_isset(s.pass,"string")?(this._auth=!0,this.user=s.user,this.pass=s.pass):this._auth=!1}else{if(!_isset(s,"string"))throw new TypeError("Invalid configuration passed to CDBDriver constructor!");try{if(s.includes("@")){this._auth=!0;var r=s.split("@"),i=r[0].split("//")[0]+"//",e=r[0].split("//")[1];this.user=e.split(":")[0],this.pass=e.split(":")[1],this.host=i+r[1].split(":")[0],this.port=parseInt(r[1].split(":")[1])}else this._auth=!1,this.host=s.split(new RegExp(":(?!/)"))[0],this.port=parseInt(s.split(new RegExp(":(?!/)"))[1])}catch(t){throw new TypeError("An error occurred while parsing CouchDB URL string.")}}};try{module.exports=CDBDriver}catch(t){}